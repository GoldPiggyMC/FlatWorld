plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id "com.diffplug.spotless" version "6.11.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://maven.kyrptonaught.dev' }
    maven { url 'https://maven.wispforest.io' }
    maven { url 'https://maven.blamejared.com' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.kyrptonaught:customportalapi:${project.custom_portal_api_version}"
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modImplementation "vazkii.patchouli:Patchouli:${patchouli_version}"

    include "io.wispforest:owo-sentinel:${project.owo_version}"
    include "net.kyrptonaught:customportalapi:${project.custom_portal_api_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach { it.options.release = 17 }

java { withSourcesJar() }

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications { mavenJava(MavenPublication) { from components.java } }

    repositories {}
}

spotless {
    format 'misc', {
        target '*.gradle', '*.md', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }

    java {
        target 'forge/src/*/java/**/*.java', 'fabric/src/*/java/**/*.java', 'quilt/src/*/java/**/*.java'

        googleJavaFormat().aosp()
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
        removeUnusedImports()
        formatAnnotations()
    }

    json {
        target 'forge/src/**/*.json', 'fabric/src/**/*.json', 'quilt/src/**/*.json'

        gson()
                .indentWithSpaces(4)
    }
}
